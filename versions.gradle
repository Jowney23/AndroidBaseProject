//对外提供的变量，方便统一管理、减少模板代码
/*
ext {
    apk apk编译版本
    deps 所有依赖库的集合
    buildVersions  sdk版本等
    addRepos 添加仓库地址
}*/

/*
 希腊字母版本号
 Alpha版: 此版本表示该软件在此阶段主要是以实现软件功能为主，通常只在软件开发者内部交流，一般而言，该版本软件的Bug较多，需要继续修改。
 Beta版: 该版本相对于α版已有了很大的改进，消除了严重的错误，但还是存在着一些缺陷，需要经过多次测试来进一步消除，可以对一些用户开放。
 RC版: 该版本已经相当成熟了，基本上不存在导致错误的BUG，与即将发行的正式版相差无几。
 Release版: 该版本意味“最终版本”，在前面版本的一系列测试版之后，终归会有一个正式版本，是最终交付用户使用的一个版本。
*/
/*app的信息*/
def app_versions = [:]
app_versions.appName = "AndroidBase"
app_versions.appNameDebug = "AndroidBase~"
app_versions.appApplicationId = "com.tsl.androidbase"
ext.extAppVersions = app_versions

/*安装包的信息*/
def apk_versions = [:]
apk_versions.versionType = "Alpha"
apk_versions.apkName = "AndroidBase"
apk_versions.publishDir = "D:\\TSL_APP\\AS_App_Output"
ext.extApkVersions = apk_versions

def build_versions = [:]
build_versions.min_sdk = 25
build_versions.compile_sdk = 31
build_versions.target_sdk = 30
build_versions.build_tools = "30.0.2"
build_versions.version_code = 1
build_versions.version_name = "1.0.0.1"
ext.extBuildVersions = build_versions

//添加新版本的时候，按照首字母顺序排列
def library_versions = [:]
library_versions.activity = '1.1.0'
library_versions.android_gradle_plugin = '4.2.2'
library_versions.annotations = "1.0.0"
library_versions.apache_commons = "2.5"
library_versions.appcompat = "1.3.0"
library_versions.arch_core = "2.1.0"
library_versions.atsl_core = "1.2.0"
library_versions.atsl_junit = "1.1.1"
library_versions.atsl_rules = "1.2.0"
library_versions.atsl_runner = "1.2.0"
library_versions.benchmark = "1.1.0-alpha01"
library_versions.cardview = "1.0.0"
library_versions.constraint_layout = "2.0.4"
library_versions.core_ktx = "1.1.0"
library_versions.coroutines = "1.3.7"
library_versions.dagger = "2.16"
library_versions.dexmaker = "2.2.0"
library_versions.espresso = "3.2.0"
library_versions.fragment = "1.2.1"
library_versions.glide = "4.8.0"
library_versions.hamcrest = "1.3"
library_versions.junit = "4.12"
library_versions.kotlin = "1.5.10"
library_versions.lifecycle = "2.2.0"
library_versions.material = "1.0.0"
library_versions.mockito = "2.25.0"
library_versions.mockito_all = "1.10.19"
library_versions.mockito_android = "2.25.0"
library_versions.mockwebserver = "3.8.1"
library_versions.navigation = "2.3.0-alpha01"
library_versions.okhttp_logging_interceptor = "3.9.0"
library_versions.paging = "3.1.0-alpha04"
library_versions.recyclerview = "1.0.0"
library_versions.retrofit = "2.9.0"
library_versions.robolectric = "4.2"
library_versions.room = "2.4.0-alpha05"
library_versions.rx_android = "2.0.1"
library_versions.rxjava2 = "2.1.3"
library_versions.timber = "4.7.1"
library_versions.transition = "1.3.0"
library_versions.truth = "1.0.1"
library_versions.work = "2.2.0"

def deps = [:]

def activity = [:]
activity.activity_ktx = "androidx.activity:activity-ktx:$library_versions.activity"
deps.activity = activity

deps.android_gradle_plugin = "com.android.tools.build:gradle:$library_versions.android_gradle_plugin"

deps.annotations = "androidx.annotation:annotation:$library_versions.annotations"

deps.app_compat = "androidx.appcompat:appcompat:$library_versions.appcompat"

def arch_core = [:]
arch_core.runtime = "androidx.arch.core:core-runtime:$library_versions.arch_core"
arch_core.testing = "androidx.arch.core:core-testing:$library_versions.arch_core"
deps.arch_core = arch_core

def atsl = [:]
atsl.core = "androidx.test:core:$library_versions.atsl_core"
atsl.ext_junit = "androidx.test.ext:junit:$library_versions.atsl_junit"
atsl.runner = "androidx.test:runner:$library_versions.atsl_runner"
atsl.rules = "androidx.test:rules:$library_versions.atsl_rules"
deps.atsl = atsl

deps.benchmark = "androidx.benchmark:benchmark-junit4:$library_versions.benchmark"
deps.benchmark_gradle = "androidx.benchmark:benchmark-gradle-plugin:$library_versions.benchmark"

deps.cardview = "androidx.cardview:cardview:$library_versions.cardview"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$library_versions.constraint_layout"
deps.core_ktx = "androidx.core:core-ktx:$library_versions.core_ktx"

def coroutines = [:]
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$library_versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$library_versions.coroutines"
deps.coroutines = coroutines

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$library_versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$library_versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$library_versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$library_versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$library_versions.dagger"
deps.dagger = dagger

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$library_versions.dexmaker"

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$library_versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$library_versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$library_versions.espresso"
deps.espresso = espresso

def fragment = [:]
fragment.runtime = "androidx.fragment:fragment:${library_versions.fragment}"
fragment.runtime_ktx = "androidx.fragment:fragment-ktx:${library_versions.fragment}"
fragment.testing = "androidx.fragment:fragment-testing:${library_versions.fragment}"
deps.fragment = fragment

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$library_versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$library_versions.glide"
deps.glide = glide

deps.hamcrest = "org.hamcrest:hamcrest-all:$library_versions.hamcrest"

deps.junit = "junit:junit:$library_versions.junit"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$library_versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$library_versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$library_versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$library_versions.kotlin"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$library_versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$library_versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$library_versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$library_versions.lifecycle"
lifecycle.livedata_ktx = "androidx.lifecycle:lifecycle-livedata-ktx:$library_versions.lifecycle"
deps.lifecycle = lifecycle

deps.material = "com.google.android.material:material:$library_versions.material"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$library_versions.mockito"
mockito.all = "org.mockito:mockito-all:$library_versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$library_versions.mockito_android"
deps.mockito = mockito

deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$library_versions.mockwebserver"

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$library_versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$library_versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$library_versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$library_versions.navigation"
navigation.testing = "androidx.navigation:navigation-testing:$library_versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$library_versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$library_versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$library_versions.navigation"
deps.navigation = navigation

deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${library_versions.okhttp_logging_interceptor}"

deps.paging_runtime = "androidx.paging:paging-runtime:$library_versions.paging"

deps.recyclerview = "androidx.recyclerview:recyclerview:$library_versions.recyclerview"

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$library_versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$library_versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$library_versions.retrofit"
deps.retrofit = retrofit

deps.robolectric = "org.robolectric:robolectric:$library_versions.robolectric"

def room = [:]
room.runtime = "androidx.room:room-runtime:$library_versions.room"
room.compiler = "androidx.room:room-compiler:$library_versions.room"
room.ktx = "androidx.room:room-ktx:$library_versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$library_versions.room"
room.paging = "androidx.room:room-paging:$library_versions.room"
room.testing = "androidx.room:room-testing:$library_versions.room"
deps.room = room

deps.rx_android = "io.reactivex.rxjava2:rxandroid:$library_versions.rx_android"

deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$library_versions.rxjava2"

deps.timber = "com.jakewharton.timber:timber:$library_versions.timber"

deps.transition = "androidx.transition:transition:$library_versions.transition"

deps.truth = "com.google.truth:truth:$library_versions.truth"

def work = [:]
work.runtime = "androidx.work:work-runtime:$library_versions.work"
work.testing = "androidx.work:work-testing:$library_versions.work"
work.firebase = "androidx.work:work-firebase:$library_versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$library_versions.work"
deps.work = work

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.maven { url 'https://dl.google.com/dl/android/maven2/' }
    handler.maven { url 'https://jitpack.io' }
    handler.jcenter()
    handler.google()
    handler.maven {
        url "http://maven.aliyun.com/nexus/content/repositories/releases/"
    }
}

ext.addRepos = this.&addRepos
